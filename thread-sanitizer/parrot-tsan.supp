{
  <Put your suppression name here>
  ThreadSanitizer:Race
  fun:sem_wait
  fun:tern::RecorderRT::pthreadCreate
	...
}
{
  <Put your suppression name here>
  ThreadSanitizer:Race
  fun:tern::RRScheduler::wait_t::wait
	...
}
{
  <Put your suppression name here>
  ThreadSanitizer:Race
  fun:tern::Serializer::incTurnCount
	...
}
{
  <Put your suppression name here>
  ThreadSanitizer:Race
  fun:tern::RRScheduler::putTurn
	...
}
{
  <Put your suppression name here>
  ThreadSanitizer:Race
  fun:tern::RRScheduler::nextRunnable
	...
}
{
  <Put your suppression name here>
  ThreadSanitizer:Race
  fun:tern::RRScheduler::wait_t::post
	...
}
{
  <Put your suppression name here>
  ThreadSanitizer:Race
  fun:tern::RecorderRT::pthreadCreate
	...
}
{
  <Put your suppression name here>
  ThreadSanitizer:Race
  fun:tern::RRScheduler::tryPutTurn
	...
}
{
  <Put your suppression name here>
  ThreadSanitizer:Race
  fun:std::_List_node_base::_M_hook
	...
}
{
  <Put your suppression name here>
  ThreadSanitizer:Race
  fun:tern::RRScheduler::fireTimeouts
	...
}
{
  <Put your suppression name here>
  ThreadSanitizer:Race
  fun:tern::RRScheduler::signal
	...
}
{
  <Put your suppression name here>
  ThreadSanitizer:Race
  fun:std::_List_node_base::_M_unhook
	...
}
{
  <Put your suppression name here>
  ThreadSanitizer:Race
  fun:std::tr1::_Hashtable::_M_insert_bucket
  fun:tern::RRScheduler::putTurn
	...
}
{
  <Put your suppression name here>
  ThreadSanitizer:Race
  fun:std::tr1::_Hashtable::erase
  fun:tern::RRScheduler::putTurn
	...
}
{
  <Put your suppression name here>
  ThreadSanitizer:Race
  fun:tern::RRScheduler::wait
	...
}
{
  <Put your suppression name here>
  ThreadSanitizer:Race
  fun:tern::RecorderRT::pthreadJoin
	...
}
{
  <Put your suppression name here>
  ThreadSanitizer:Race
  fun:pthread_mutex_trylock
	...
}
{
	<tern_barrier_wait>
	ThreadSanitizer:Race
	fun:tern::RecorderRT::pthreadBarrierWait
	...
}
{
	<barrier_wait>
	ThreadSanitizer:Race
	fun:pthread_barrier_wait
	...
}
{
	<lineup_start>
	ThreadSanitizer:Race
	fun:tern::RecorderRT::lineupStart
	...
}
{
	<lineup_end>
	ThreadSanitizer:Race
	fun:tern::RecorderRT::lineupEnd
	...
}
{
	<next>
	ThreadSanitizer:Race
	fun:tern::RRScheduler::next
	...
}
{
	<wakeUpIdleThread>
	fun:tern::RRScheduler::wakeUpIdleThread
	...
}
{
	<nonDetStart>
	fun:tern::RecorderRT::nonDetStart
	...
}
{
	<check_wakeup>
	fun:tern::RRScheduler::check_wakeup
	...
}
{
	<tern_cond_broadcast>
	fun:pthread_cond_broadcast
	...
}
