#!/bin/bash

set -e

ROOT=`pwd`

package=( axel libtiff4-dev )
for i in "${package[@]}"
do
    check=$(dpkg-query -W -f='${Status} ${Version}\n' $i 2>&1)
    if [[ "$check" != "install ok"* ]]; then
        echo "please run 'sudo apt-get install ${package[*]}'"
        exit 1
    fi
done

AXEL=$(which axel)
echo "Checking splash2 sim file..."
if [ ! -f parsec-3.0-input-sim.tar.gz ]; then
    $AXEL http://parsec.cs.princeton.edu/download/3.0/parsec-3.0-input-sim.tar.gz
fi
echo "Checking parsec native file..."
if [ ! -f parsec-3.0-input-native.tar.gz ]; then
    $AXEL http://parsec.cs.princeton.edu/download/3.0/parsec-3.0-input-native.tar.gz
fi
echo "Checking splash2 core file..."
if [ ! -f parsec-3.0-core.tar.gz ]; then
    $AXEL http://parsec.cs.princeton.edu/download/3.0/parsec-3.0-core.tar.gz
fi
rm -rf tsan2
mkdir tsan2
pushd tsan2

tar zxvf ../parsec-3.0-input-sim.tar.gz

tar zxvf ../parsec-3.0-input-native.tar.gz

tar zxf ../parsec-3.0-core.tar.gz > /dev/null 2>&1

# log file might miss if the execution time is less than 1 second
sed -i "51 s/%F_%T\"/%F_%T_%N\"/" parsec-3.0/config/linux.sysconf
# posix time format
sed -i "268 s/\"time\"/\"time -p\"/g" parsec-3.0/bin/parsecmgmt

echo "Build splash2x"
# patch building configs
sed -i '54s/\".*$/clang/g' parsec-3.0/config/gcc.bldconf
sed -i '55s/\".*$/clang++/g' parsec-3.0/config/gcc.bldconf
sed -i  's/${PORTABILITY_FLAGS}/ ${PORTABILITY_FLAGS} -fsanitize=thread -fPIE /g' parsec-3.0/config/gcc.bldconf
sed -i '78 s|\"$| -fsanitize=thread -pie\"''|' parsec-3.0/config/gcc.bldconf
sed -i '74 s/\"$/ -march=native\"/g' parsec-3.0/config/gcc.bldconf
sed -i '75 s/\"$/ -march=native\"/g' parsec-3.0/config/gcc.bldconf
sed -i 's/-static-libgcc//g' parsec-3.0/config/gcc.bldconf

# use 'c.m4.null.POSIX_BARRIER' instead of 'parmacs.pthreads.c.m4'
rm -rf parsec-3.0/pkgs/libs/parmacs/src/m4/parmacs.POSIX_BARRIER.c.m4
ln -s c.m4.null.POSIX_BARRIER \
    parsec-3.0/pkgs/libs/parmacs/src/m4/parmacs.POSIX_BARRIER.c.m4
sed -i '81 s/pthreads/POSIX_BARRIER/g' parsec-3.0/config/gcc.bldconf
sed -i '367 s/)/, gm->nprocs)/g' parsec-3.0/ext/splash2x/apps/raytrace/src/main.C #patch raytrace


./parsec-3.0/bin/parsecmgmt -a build -p splash2x.barnes
./parsec-3.0/bin/parsecmgmt -a build -p splash2x.fmm
./parsec-3.0/bin/parsecmgmt -a build -p splash2x.ocean_cp
./parsec-3.0/bin/parsecmgmt -a build -p splash2x.ocean_ncp
./parsec-3.0/bin/parsecmgmt -a build -p splash2x.radiosity
./parsec-3.0/bin/parsecmgmt -a build -p splash2x.raytrace
#./parsec-3.0/bin/parsecmgmt -a build -p splash2x.volrend
./parsec-3.0/bin/parsecmgmt -a build -p splash2x.water_nsquared
./parsec-3.0/bin/parsecmgmt -a build -p splash2x.water_spatial
./parsec-3.0/bin/parsecmgmt -a build -p splash2x.cholesky
./parsec-3.0/bin/parsecmgmt -a build -p splash2x.fft
./parsec-3.0/bin/parsecmgmt -a build -p splash2x.lu_cb
./parsec-3.0/bin/parsecmgmt -a build -p splash2x.lu_ncb
./parsec-3.0/bin/parsecmgmt -a build -p splash2x.radix
./parsec-3.0/bin/parsecmgmt -a status -p splash2x

ARCH=`uname -m`
if [[ "$ARCH" == "x86_64" ]]; then
    hosttype="amd64"
elif [[ "$ARCH" == "amd64" ]]; then
    hosttype="amd64"
else
    hosttype="i386"
fi

# copy files
find . -maxdepth 1 -type l -exec rm -rf {} \;
workloads=( barnes fmm ocean_cp ocean_ncp radiosity raytrace volrend water_nsquared water_spatial )
for i in "${workloads[@]}"
do
    ln -s parsec-3.0/ext/splash2x/apps/$i/inst/$hosttype-linux.gcc/bin/$i
done
workloads=( cholesky fft lu_cb lu_ncb radix )
for i in "${workloads[@]}"
do
    ln -s parsec-3.0/ext/splash2x/kernels/$i/inst/$hosttype-linux.gcc/bin/$i
done

popd

echo "DONE!"
